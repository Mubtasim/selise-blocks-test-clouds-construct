name: Build (dev)

on:
  push:
    branches:
      - dev

env:
  RUN_SONARQUBE: 'false'

jobs:
  initialization:
    runs-on: ubuntu-latest
    outputs:
      envvalue1: ${{ steps.setvar.outputs.envvar1 }}
    steps:
      - name: set value
        id: setvar
        run: |
          echo envvar1="$RUN_SONARQUBE" >> $GITHUB_OUTPUT

  sonarqube-job:
    if: ${{ success() && needs.initialization.outputs.envvalue1=='true' }}
    uses: ./.github/workflows/2_sonar.yml
    secrets:
      SELISE_GITHUB_PAT: ${{ secrets.SELISE_GITHUB_PAT }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_GLOBAL }}
    needs: [initialization]

  cd-job:
    if: ${{ github.event_name == 'push' && (success() || needs.initialization.outputs.envvalue1=='false') }}
    uses: ./.github/workflows/3_web.yml
    with:
      CONTAINER_NAME: 'dev-$SERVICE_NAME-webclient'
      NAMESPACE: 'dev-$REPO_NAME'
      SERVICE_NAME: $SERVICE_NAME
      CI_BUILD: 'build-dev'
    secrets:
      SELISE_GITHUB_PAT: ${{ secrets.SELISE_GITHUB_PAT }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_AKS_BLOCKS_CREDENTIALS }}
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_BLOCKS_CONTAINER_REGISTRY }}
      ClUSTER_RESOURCE_GROUP: ${{ secrets.ClUSTER_AKS_BLOCKS_RESOURCE_GROUP }}
      CLUSTER_NAME: ${{ secrets.AKS_BLOCKS_DEV_CLUSTER }}
      ACR_RESOURCE_GROUP: ${{ secrets.ClUSTER_AKS_BLOCKS_RESOURCE_GROUP }}